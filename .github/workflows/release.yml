name: package-deploy

on:
  push:
    branches:
      - master
      - release/*
  pull_request:
    branches: 
      - master
      - release/*

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(format('{0} {1}', github.event.head_commit.message, github.event.pull_request.title), '[ci-skip]')"
    steps:
    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Check out Code 
      uses: actions/checkout@v3
    - name: Install and cache PowerShell modules
      uses: potatoqualitee/psmodulecache@v5.2
      with:
        modules-to-cache: powershell-yaml
    - name: Restore dependencies
      run: cd src && dotnet restore
    - name: Build solution and generate base NuGet package
      run: |  
        cd src/ResultCQRS
        dotnet pack -c Release -o out
    - name: Push generated base package to NuGet registry
      run: dotnet nuget push ./src/ResultCQRS/out/*.nupkg --skip-duplicate -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
    - name: Build solution and generate Autofac NuGet package
      run: |  
        cd src/ResultCQRS.Autofac
        dotnet pack -c Release -o out
    - name: Push generated base package to NuGet registry
      run: dotnet nuget push ./src/ResultCQRS.Autofac/out/*.nupkg --skip-duplicate -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
    - name: Build Docs
      run: dotnet tool restore && cd ./docs && dotnet docfx docfx.json -f
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to private registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push to private registry
      uses: docker/build-push-action@v4
      with:
        context: ./docs
        push: true
        tags: ${{ secrets.DOCKER_REGISTRY }}/result-cqrs:latest
    - name: Sleep for 10 seconds
      uses: jakejarvis/wait-action@master
      with:
        time: '10s'
    - name: Trigger watchtower
      uses: wei/curl@v1
      with:
        args: |
          -H \"Authorization: Bearer ${{ secrets.WATCHTOWER_HTTP_API_TOKEN}}\" ${{ secrets.HOST_WATCHTOWER_API}} --connect-timeout 600